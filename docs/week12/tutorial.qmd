---
title: "ETC3250/5250 Tutorial 12"
subtitle: "Evaluating your clustering model"
author: "Prof. Di Cook"
date: "2024-05-20"
quarto-required: ">=1.3.0"
format:
    unilur-html:
        output-file: tutorial.html
        embed-resources: true
        css: "../assets/tutorial.css"
    unilur-html+solution:
        output-file: tutorialsol.html
        embed-resources: true
        css: "../assets/tutorial.css"
unilur-solution: true
---

```{r echo=FALSE}
# Set up chunk for all slides
knitr::opts_chunk$set(
  fig.width = 4,
  fig.height = 4,
  fig.align = "center",
  out.width = "100%",
  code.line.numbers = FALSE,
  fig.retina = 3,
  echo = TRUE,
  message = FALSE,
  warning = FALSE,
  cache = FALSE,
  dev.args = list(pointsize = 11)
)
```

```{r}
#| echo: true
#| code-fold: true
#| code-summary: "Load the libraries and avoid conflicts, and prepare data"
# Load libraries used everywhere
library(tidyverse)
library(tidymodels)
library(tidyclust)
library(patchwork)
library(mulgar)
library(tourr)
library(geozoo)
library(colorspace)
library(visdat)
library(missForest)
library(ggthemes)
library(conflicted)
conflicts_prefer(dplyr::filter)
conflicts_prefer(dplyr::select)
conflicts_prefer(dplyr::slice)
```

```{r}
#| echo: false
# Set plot theme
theme_set(theme_bw(base_size = 14) +
   theme(
     aspect.ratio = 1,
     plot.background = element_rect(fill = 'transparent', colour = NA),
     plot.title.position = "plot",
     plot.title = element_text(size = 24),
     panel.background = element_rect(fill = 'transparent', colour = NA),
     legend.background = element_rect(fill = 'transparent', colour = NA),
     legend.key = element_rect(fill = 'transparent', colour = NA)
   )
)

```

## `r emo::ji("target")` Objectives

The goal for this week is learn to about fitting support vector machine models. 

## `r emo::ji("wrench")` Preparation 

- Make sure you have all the necessary libraries installed. 

## Exercises: 




#### 1. Re-do Julia Silge's post on hierarchical clustering

Have a read through [Julia's post on clustering Health Care Indicators](https://juliasilge.com/blog/health-care-indicators/). This activity is to repeat her analysis, handling missing values prior to clustering and examining the results. However the R code is a bit old style, so we will update it, too.


```{r}
#| eval: false
library(RSocrata)
health_all <- read.socrata("https://opendata.utah.gov/resource/qmsu-gki4.csv")
#health_all[,3:67] <- lapply(health_all[,3:67], as.numeric)
#health_all <- health_all[c(-1),]
health_all <- make_clean_names(health_all)

# Notice the missing values
vis_dat(health_all)

# Clean names, standardise
health <- health_all[,c(2,4:5,18,22,24,27,31,34,
                       36,38,42,44,48,51,55,
                       60,63,64)]
colnames(health) <- c("County", 
              "PercentUnder18",
              "PercentOver65",
              "DiabeticRate", 
              "HIVRate",
              "PrematureMortalityRate",
              "InfantMortalityRate",
              "ChildMortalityRate",
              "LimitedAccessToFood",
              "FoodInsecure", 
              "MotorDeathRate",
              "DrugDeathRate",
              "Uninsured", 
              "UninsuredChildren",
              "HealthCareCosts", 
              "CouldNotSeeDr",
              "MedianIncome",
              "ChildrenFreeLunch",
              "HomicideRate")
health_std <- health |>
  mutate_if(is.numeric, 
            function(x) (x-mean(x, na.rm=TRUE))/
              sd(x, na.rm=TRUE))

# Impute missing values
health_std_imputed <- missForest(health_std[,-1])
```


## `r emo::ji("wave")` Finishing up

Make sure you say thanks and good-bye to your tutor. This is a time to also report what you enjoyed and what you found difficult.
